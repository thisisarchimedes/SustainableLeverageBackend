/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PositionLedger,
  PositionLedgerInterface,
} from "../../../src/ABIs/PositionLedger";

const _abi = [
  {
    inputs: [],
    name: "AccessControlBadConfirmation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "neededRole",
        type: "bytes32",
      },
    ],
    name: "AccessControlUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotExpiredOrLiquidated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
    ],
    name: "claimableAmountWasClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "strategyAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strategyShares",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "wbtcDebtAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poistionOpenBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionExpirationBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationBuffer",
            type: "uint256",
          },
          {
            internalType: "enum PositionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "claimableAmount",
            type: "uint256",
          },
        ],
        internalType: "struct LedgerEntry",
        name: "entry",
        type: "tuple",
      },
    ],
    name: "createNewPositionEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
    ],
    name: "getClaimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
    ],
    name: "getCollateralAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
    ],
    name: "getDebtAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
    ],
    name: "getOpenBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "strategyAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strategyShares",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "wbtcDebtAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "poistionOpenBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionExpirationBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationBuffer",
            type: "uint256",
          },
          {
            internalType: "enum PositionState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "claimableAmount",
            type: "uint256",
          },
        ],
        internalType: "struct LedgerEntry",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
    ],
    name: "getPositionState",
    outputs: [
      {
        internalType: "enum PositionState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
    ],
    name: "getStrategyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
    ],
    name: "getStrategyShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "callerConfirmation",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimableAmount",
        type: "uint256",
      },
    ],
    name: "setClaimableAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "expiredVault",
            type: "address",
          },
          {
            internalType: "address",
            name: "leverageDepositor",
            type: "address",
          },
          {
            internalType: "address",
            name: "positionToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "wbtcVault",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxyAdmin",
            type: "address",
          },
          {
            internalType: "address",
            name: "leveragedStrategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "protocolParameters",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracleManager",
            type: "address",
          },
          {
            internalType: "address",
            name: "positionOpener",
            type: "address",
          },
          {
            internalType: "address",
            name: "positionCloser",
            type: "address",
          },
          {
            internalType: "address",
            name: "positionLiquidator",
            type: "address",
          },
          {
            internalType: "address",
            name: "positionLedger",
            type: "address",
          },
          {
            internalType: "address",
            name: "swapManager",
            type: "address",
          },
        ],
        internalType: "struct DependencyAddresses",
        name: "dependencies",
        type: "tuple",
      },
    ],
    name: "setDependencies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
      {
        internalType: "enum PositionState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "setPositionState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611344806100206000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806391d14854116100d8578063c0b7466e1161008c578063d547741f11610066578063d547741f146103fa578063eb02c3011461040d578063eb29dc5e1461042d57600080fd5b8063c0b7466e146103b1578063c0b944c9146103c4578063c941f9ab146103d757600080fd5b8063acd72273116100bd578063acd722731461035b578063b085c0761461037e578063bdc7c12b1461039157600080fd5b806391d14854146102ee578063a217fddf1461035357600080fd5b806344a46feb1161012f5780637d711daa116101145780637d711daa146102a05780637d8ca242146102c35780638129fc1c146102e657600080fd5b806344a46feb1461022f5780636ccf2fa71461024257600080fd5b8063248a9ca311610160578063248a9ca3146101b95780632f2ff15d1461020957806336568abe1461021c57600080fd5b806301ffc9a71461017c5780630e190ba0146101a4575b600080fd5b61018f61018a366004610feb565b610460565b60405190151581526020015b60405180910390f35b6101b76101b23660046110bd565b6104f9565b005b6101fb6101c7366004611180565b60009081527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015490565b60405190815260200161019b565b6101b7610217366004611199565b610617565b6101b761022a366004611199565b610661565b6101b761023d3660046111c5565b6106bf565b61027b610250366004611180565b60009081526020819052604090206001015473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019b565b6101fb6102ae366004611180565b60009081526020819052604090206002015490565b6101fb6102d1366004611180565b60009081526020819052604090206008015490565b6101b76106ff565b61018f6102fc366004611199565b60009182527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268006020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b6101fb600081565b6101fb610369366004611180565b60009081526020819052604090206003015490565b6101b761038c366004611180565b6108a8565b6101fb61039f366004611180565b60009081526020819052604090205490565b6101b76103bf3660046111e7565b610995565b6101b76103d2366004611200565b610a9a565b6101fb6103e5366004611180565b60009081526020819052604090206004015490565b6101b7610408366004611199565b610b44565b61042061041b366004611180565b610b88565b60405161019b919061128d565b61045361043b366004611180565b60009081526020819052604090206007015460ff1690565b60405161019b919061130e565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806104f357507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b7f95527396ef7079b4e7aa0523dff07d638fe39b8ce08d979dae99f15bb34c2b8f61052381610c4c565b600083815260208181526040918290208451815590840151600180830180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9093169290921790915591840151600282015560608401516003820155608084015160048083019190915560a0850151600583015560c0850151600683015560e08501516007830180548795929391927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009091169184908111156105ff576105ff611223565b02179055506101008201518160080155905050505050565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015461065181610c4c565b61065b8383610c59565b50505050565b73ffffffffffffffffffffffffffffffffffffffff811633146106b0576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106ba8282610d7a565b505050565b7f95527396ef7079b4e7aa0523dff07d638fe39b8ce08d979dae99f15bb34c2b8f6106e981610c4c565b5060009182526020829052604090912060080155565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff1660008115801561074a5750825b905060008267ffffffffffffffff1660011480156107675750303b155b905081158015610775575080155b156107ac576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000166001178555831561080d5784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610815610e58565b61083f7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610c59565b5083156108a15784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b7f95527396ef7079b4e7aa0523dff07d638fe39b8ce08d979dae99f15bb34c2b8f6108d281610c4c565b60008281526020819052604090206007015460ff1660028160048111156108fb576108fb611223565b1415801561091b5750600381600481111561091857610918611223565b14155b15610952576040517f382dc85b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505060009081526020819052604081206007810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600417905560080155565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756109bf81610c4c565b6109fa7f95527396ef7079b4e7aa0523dff07d638fe39b8ce08d979dae99f15bb34c2b8f6109f56101208501610100860161131c565b610c59565b50610a317f95527396ef7079b4e7aa0523dff07d638fe39b8ce08d979dae99f15bb34c2b8f6109f56101408501610120860161131c565b50610a687f95527396ef7079b4e7aa0523dff07d638fe39b8ce08d979dae99f15bb34c2b8f6109f56101608501610140860161131c565b506106ba7f95527396ef7079b4e7aa0523dff07d638fe39b8ce08d979dae99f15bb34c2b8f6109f5602085018561131c565b7f95527396ef7079b4e7aa0523dff07d638fe39b8ce08d979dae99f15bb34c2b8f610ac481610c4c565b600083815260208190526040902060070180548391907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836004811115610b1057610b10611223565b02179055506004826004811115610b2957610b29611223565b036106ba575050600090815260208190526040812060080155565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268006020526040902060010154610b7e81610c4c565b61065b8383610d7a565b610b90610f78565b6000828152602081815260409182902082516101208101845281548152600182015473ffffffffffffffffffffffffffffffffffffffff1692810192909252600281015492820192909252600382015460608201526004808301546080830152600583015460a0830152600683015460c0830152600783015491929160e084019160ff90911690811115610c2657610c26611223565b6004811115610c3757610c37611223565b81526020016008820154815250509050919050565b610c568133610e62565b50565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268006020818152604080842073ffffffffffffffffffffffffffffffffffffffff8616855290915282205460ff16610d705760008481526020828152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610d0c3390565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506104f3565b60009150506104f3565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268006020818152604080842073ffffffffffffffffffffffffffffffffffffffff8616855290915282205460ff1615610d705760008481526020828152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a460019150506104f3565b610e60610f11565b565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268006020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610f0d576040517fe2517d3f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024810183905260440160405180910390fd5b5050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610e60576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180610120016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160006004811115610fde57610fde611223565b8152602001600081525090565b600060208284031215610ffd57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461102d57600080fd5b9392505050565b604051610120810167ffffffffffffffff8111828210171561107f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b803573ffffffffffffffffffffffffffffffffffffffff811681146110a957600080fd5b919050565b8035600581106110a957600080fd5b6000808284036101408112156110d257600080fd5b83359250610120807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08301121561110857600080fd5b611110611034565b91506020850135825261112560408601611085565b6020830152606085013560408301526080850135606083015260a0850135608083015260c085013560a083015260e085013560c083015261010061116a8187016110ae565b60e0840152940135938101939093525092909150565b60006020828403121561119257600080fd5b5035919050565b600080604083850312156111ac57600080fd5b823591506111bc60208401611085565b90509250929050565b600080604083850312156111d857600080fd5b50508035926020909101359150565b60006101a082840312156111fa57600080fd5b50919050565b6000806040838503121561121357600080fd5b823591506111bc602084016110ae565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110611289577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000610120820190508251825273ffffffffffffffffffffffffffffffffffffffff602084015116602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e08301516112fe60e0840182611252565b5061010092830151919092015290565b602081016104f38284611252565b60006020828403121561132e57600080fd5b61102d8261108556fea164736f6c6343000815000a";

type PositionLedgerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PositionLedgerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PositionLedger__factory extends ContractFactory {
  constructor(...args: PositionLedgerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PositionLedger & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PositionLedger__factory {
    return super.connect(runner) as PositionLedger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PositionLedgerInterface {
    return new Interface(_abi) as PositionLedgerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PositionLedger {
    return new Contract(address, _abi, runner) as unknown as PositionLedger;
  }
}
