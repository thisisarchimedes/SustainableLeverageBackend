name: Deploy on Expirator lambda
on:
  push:
    branches:
      - daniel/arc-690-backend-to-expire-positions

env:
    AWS_REGION: us-east-1
    PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
    API_DEVOPS_EVENT_CATCHER: ${{ vars.API_DEVOPS_EVENT_CATCHER }}
    DEVOPS_EVENTS_SECRET_TOKEN: ${{ secrets.DEVOPS_EVENTS_SECRET_TOKEN }}
  
jobs:

  deploy-sustainable-leverage-expirator-bot-demo-lambda:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          yarn
          yarn add @uniswap/router-sdk @uniswap/sdk-core @uniswap/smart-order-router @uniswap/v3-sdk

      - name: Build
        run: yarn build

      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EXPIRATOR_EC2_HOST_DEMO }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EXPIRATOR_DEMO_EC2_SSH_KEY }}
          port: 22
          source: "."
          target: "/srv"

      - name: Run deployment script on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EXPIRATOR_EC2_HOST_DEMO }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EXPIRATOR_DEMO_EC2_SSH_KEY }}
          port: 22
          script: |
            set -e  # Exit immediately if a command exits with a non-zero status.
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
            cd /srv
            cat > .env << EOF
            AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            MOCK_CURVE_POOL_ADDRESS=${{secrets.MOCK_CURVE_POOL_ADDRESS}}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            S3_BUCKET_CONFIG=${{ secrets.S3_BUCKET_CONFIG }}
            S3_ADDRESSES_KEY=${{ secrets.S3_ADDRESSES_KEY }}
            RPC_URL=${{ secrets.DEMO_RPC_URL }}
            MAINNET_RPC_URL=${{ secrets.MAINNET_RPC_URL }}
            NEW_RELIC_API_KEY=${{ secrets.NEW_RELIC_API_KEY }}
            PRIVATE_KEY=${{ secrets.PRIVATE_KEY_EXPIRATOR }}
            ENVIRONMENT="demo"
            EOF
            pm2 kill                                    # Stops all PM2-managed applications
            export PAT_TOKEN=${{ secrets.PAT_TOKEN }}   # GitHub personal access token for installing the Backend-SDK
            yarn install                                # Install dependencies
            pm2 start 'yarn expirator'                 # Run the liquidator bot